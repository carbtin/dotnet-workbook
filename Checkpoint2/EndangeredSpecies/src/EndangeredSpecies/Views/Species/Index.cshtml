@model PaginatedList<EndangeredSpecies.ViewModels.SpeciesViewModel>

@using Microsoft.AspNetCore.Identity
@using EndangeredSpecies.Extensions
@using System.Security.Claims

@{
    ViewData["Title"] = "Index";
    SelectList cclist = ViewBag.CountryCodeSelectList;
    SelectList sclist = ViewBag.StatusCodeSelectList;
}

<hr/>
<table class="table">
    <thead>
        <tr>
            <th>Common Name</th>
            <th>Scientific Name</th>
            <th>Status</th>
            <th>Country</th>
            <th>Listing Date</th>
            <th></th>
        </tr>
        <tr>
            <th>
                <form method="post" id="SearchString" action="@Url.Action("Index", "Species")">
                    <div class="form-group no-color has-feedback">
                        <input class="form-control hasclear" type="text" id="SearchString" name="SearchString" value="@ViewData["currentFilter"]" />
                        <span class="clearer glyphicon glyphicon-remove form-control-feedback"></span>
                    </div>
                </form>
            </th>
            <th>
            </th>
            <th>
                <form method="post" id="scfilter" action="@Url.Action("Index", "Species")">
                    @Html.DropDownList("statuscodeFilter", sclist, "All", new { @class = "form-control", @style = "width: 16rem; display:inline-block" })
                </form>
            </th>
            <th>
                <form method="post" id="ccfilter" action="@Url.Action("Index", "Species")">
                    @Html.DropDownList("countrycodeFilter", cclist, "All", new { @class = "form-control", @style = "width: 16rem; display:inline-block" })
                </form>
            </th>
            <th>
            @if (User.Identity.IsAuthenticated == true && User.IsInRole("Admin"))
            {
                <p>
                    <a asp-action="Create">Create New</a>
                </p>
            }
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ComName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SciName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StatusCodeLabel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CountryCodeLabel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ListingDate)
        </td>
        <td>
            <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
            @if (User.Identity.IsAuthenticated == true && User.IsInRole("Admin"))
            {
               <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
               <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            }
        </td>
    </tr>
}
</tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="center-block">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled btn">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled btn">
        Next
    </a>
    <span>Page @(Model.PageIndex) of @(Model.TotalPages)</span>
</div>

@section scripts
{
    <script>
    $(document).ready(function(){
        $("#countrycodeFilter").change(function () {
            $("#ccfilter").submit();
        });

        $("#statuscodeFilter").change(function () {
            $("#scfilter").submit();
        });

        $(".hasclear").keyup(function () {
            var t = $(this);
            t.next('span').toggle(Boolean(t.val()));
        });

        $(".clearer").hide($(this).prev('input').val());

        $(".clearer").click(function () {
            $(this).prev('input').val('').focus();
            $(this).hide();
        });
    });
    </script>
}